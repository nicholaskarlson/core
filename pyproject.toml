[tool.poetry]
name = "pymapgis"
version = "0.1.0"
description = "Modern GIS toolkit for Python - Simplifying geospatial workflows with built-in data sources, intelligent caching, and fluent APIs"
authors = ["Nicholas Karlson <nicholaskarlson@gmail.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/pymapgis/core"
repository = "https://github.com/pymapgis/core"
documentation = "https://pymapgis.github.io/core/"
keywords = ["gis", "geospatial", "mapping", "census", "visualization", "geography"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: GIS",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]
packages = [{ include = "pymapgis" }]

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
geopandas = "^1.1"
fsspec = "^2025.5"
leafmap = "^0.47.2"
pydantic-settings = "^2.9.1"
# (add rasterio later, once the click conflict is solved)
requests-cache = "^1.2.1"
pandas = "^2.3.0"
aiohttp = "^3.9.0"
pyarrow = "^14.0.0"
xarray = "^2023.6.0"
rioxarray = "^0.14.0"
netcdf4 = "^1.6.0"
typer = {extras = ["all"], version = ">=0.9.0"}
fastapi = ">=0.100.0"
uvicorn = {extras = ["standard"], version = ">=0.23.0"}
rio-tiler = ">=5.0,<6.0"
mapbox-vector-tile = "^2.1.0"
geoarrow-types = "^0.3.0" # Core GeoArrow types package
networkx = "^3.0" # Using version 3.x for modern NetworkX features
pdal = { version = "^3.4.0", optional = true } # Optional due to system dependencies
pydeck = "^0.8.0" # For deck.gl visualizations
kafka-python = { version = "^2.0.2", optional = true } # For Kafka streaming
paho-mqtt = { version = "^1.6.1", optional = true }    # For MQTT streaming
toml = "^0.10.2"
geoarrow-pyarrow = "^0.2.0"
seaborn = "^0.13.2"

[tool.poetry.extras]
kafka = ["kafka-python"]
mqtt = ["paho-mqtt"]
streaming = ["kafka-python", "paho-mqtt"]
pointcloud = ["pdal"]

[tool.poetry.group.dev.dependencies]
pytest = "^8.4"
pytest-cov = "^6.1"
ruff = "^0.11"
black = "^25.1"
mypy = "^1.16"
pre-commit = "^4.2"
xarray-multiscale = "^0.3.0" # For multiscale Zarr testing

[tool.pytest.ini_options]
# Configure pytest to run only proper test files
testpaths = ["tests", "examples", "tennessee_counties_qgis"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
zarr = "^2.17.0"             # For Zarr array manipulation in tests

[build-system]
requires = ["poetry-core>=1.9.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
pymapgis = "pymapgis.cli:app"